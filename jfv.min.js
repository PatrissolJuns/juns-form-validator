const MARQUEE_BEGIN="${";const MARQUEE_END="}";const validationCLass={input:['jfv-input-valid','jfv-input-invalid','jfv-input-information'],label:['jfv-label-valid','jfv-label-invalid','jfv-label-information']};(function(old){$.fn.attr=function(){if(arguments.length===0){if(this.length===0)return null;let obj={};$.each(this[0].attributes,function(){if(this.specified){obj[this.name]=this.value}});return obj}
    return old.apply(this,arguments)}})($.fn.attr);(function(old){$.fn.jfv=function(){if(this===undefined||this===null)
    return arguments.length===0?[]:undefined;if(arguments.length===0){let jfvEntries=Object.entries(this[0].attributes).map(attr=>[attr[1].name,attr[1].value]).filter(a=>/jfv/.test(a[0]));if(jfvEntries.length===0)return[];return jfvEntries.map(a=>a[0].replace('jfv-',''))}
else if(arguments.length===1){let regex=new RegExp("jfv-"+arguments[0]);let result=Object.entries(this[0].attributes).map(attr=>[attr[1].name,attr[1].value]).filter(a=>regex.test(a[0]));if(result.length===0)return undefined;return result[0][1]}
    return[]}})($.fn.jfv);const JFV={Extractor:class{constructor(str){this.str=str}
        get getParams(){let response=[],regex=/\${/,regex2=/}/,BreakException={};try{if(regex.test(this.str)){this.str.split('${').slice(1).map(val=>{if(regex2.test(val))response.push(val.split('}')[0]);else throw BreakException})}
            return response}
        catch(e){if(e!==BreakException)throw e;else return undefined}}
        isExist(param){let paramsArray=this.getParams;return paramsArray?paramsArray.includes(param):undefined}
        setValue(param,value){if(this.isExist(param)){let strToFind=MARQUEE_BEGIN+param+MARQUEE_END;this.str=this.str.replace(strToFind,value)}
            return this}
        get getValue(){return this.str}
        reset(newString){this.str=newString;return this}
        isFullyParsed(){return!(new RegExp("\\"+MARQUEE_BEGIN,'ig')).test(this.str)&&!(new RegExp(MARQUEE_END,'ig')).test(this.str)}},ErrorMessage:class{static errorJSON={"en-US":{"character":{"equal":"Please enter exactly ${equalLength} character(s)","max":"Please enter at most ${maxLength} character(s)","min":"Please enter at least ${minLength} character(s)",},"email":"Please enter a valid email address","number":{"equal":"Please enter exactly the number ${equalLength}","max":"please enter a number lower than or equal than ${minLength}","min":"please enter a number greater than or equal than ${minLength}","number":"Please enter a number","range":"Please enter a number between ${minLength} and ${maxLength}",},"password":{"confirmation":"Passwords must be the same"},"required":"This field is required",},"en-EN":{"character":{"equal":"Please enter exactly ${equalLength} character(s)","max":"Please enter at most ${maxLength} character(s)","min":"Please enter at least ${minLength} character(s)",},"email":"Please enter a valid email address","number":{"equal":"Please enter exactly the number ${equalLength}","max":"please enter a number lower than or equal than ${minLength}","min":"please enter a number greater than or equal than ${minLength}","number":"Please enter a number","range":"Please enter a number between ${minLength} and ${maxLength}",},"password":{"confirmation":"Passwords must be the same"},"required":"This field is required",},"fr-FR":{"character":{"equal":"Veuillez entrer exactement ${equalLength} caractère(s)","max":"Veuillez saisir au plus ${maxLength} caractère(s)","min":"Veuillez saisir au moins ${minLength} caractère(s)",},"email":"Veillez saisir une adresse email valide","number":{"equal":"Veuillez saisir exactement le nombre ${equalLength}","max":"veuillez saisir un nombre inférieur ou égale à ${minLength}","min":"veuillez saisir un nombre supérieur ou égale à ${minLength}","number":"Veillez saisir un nombre","range":"Veuillez saisir un nombre compris entre ${minLength} et ${maxLength}",},"password":{"confirmation":"Les mots de passe doivent être les mêmes"},"required":"Ce champ est requis",}};constructor(){this.currentLanguage=navigator.language||navigator.userLanguage;const LanguageError="Unknown language "+this.currentLanguage;try{if(!Object.keys(this.constructor.errorJSON).includes(this.currentLanguage)){throw new Error(LanguageError)}}
    catch(e){throw e}}
        getValueOfKey(key){let currentKey=key,currentLanguageDictionary=this.constructor.errorJSON[this.currentLanguage],response=undefined;const match=/^((\w+)\.)+\w+$|^(\w+)$/;if(match.test(currentKey)){response=currentLanguageDictionary;while(currentKey!==''){const indexOfFirstSeparator=currentKey.search(/\./);if(indexOfFirstSeparator!==-1){const firstKey=currentKey.slice(0,indexOfFirstSeparator),restOfKey=currentKey.slice(indexOfFirstSeparator+1);try{response=currentLanguageDictionary[firstKey]}
        catch(e){return response}
            currentLanguageDictionary=response;currentKey=restOfKey}
        else{response=response[currentKey];currentKey=''}}}
            return response}
        setLanguage(language){const LanguageError="Unknown language "+language;try{if(Object.keys(this.constructor.errorJSON).includes(language)){this.currentLanguage=language}
        else throw new Error(LanguageError)}
        catch(e){throw e}
            return this}}};let ERROR_MESSAGE=new JFV.ErrorMessage();function emptyChecker(element){if(element.val().length>510)return[!1,`Please enter at most 510 character(s)`];else return[!0,""]}
function emailChecker(element){let regex=/^[a-z0-9._-]+@[a-z0-9._-]{2,}\.[a-z]{2,6}$/i;return regex.test(element.val())===!0?[!0,""]:[!1,ERROR_MESSAGE.getValueOfKey('email')]}
function phoneChecker(element){let number_length=element.value.length;let regex=/^(2|6)[0-9]{8}$/ig;if($(element).jfv("optional")!==undefined&&element.value==="")return[!0,""];else if(number_length<9||number_length>9)return[!1,"Le numéro doit avoir exactement 9 chiffres"];else if(!regex.test(element.value))return[!1,"Veuillez entrer un numéro au format camerounais"];else return[!0,'']}
function numberChecker(element){let numberResult=/^[+-]?\d+(\.\d+)?$/.test(element.val())?[!0,""]:[!1,ERROR_MESSAGE.getValueOfKey('number.number')];let rangeResult=[!0,""],minLength=Number(element.jfv("min")),maxLength=Number(element.jfv("max"));let length=Number(element.val());let errorMessage=new JFV.Extractor('');if(minLength||maxLength){if(minLength&&maxLength)
    rangeResult=(length>=minLength&&length<=maxLength)?[!0,""]:[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('number.range')).setValue('minLength',minLength).setValue('maxLength',maxLength).getValue];else if(minLength)
    rangeResult=(length>=minLength)?[!0,""]:[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('number.min')).setValue('minLength',minLength).getValue];else rangeResult=(length<=maxLength)?[!0,""]:[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('number.max')).setValue('maxLength',maxLength).getValue]}
else{let equalLength=element.jfv("equal");if(equalLength){rangeResult=(length<=maxLength)?[!0,""]:[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('number.equal')).setValue('equalLength',equalLength).getValue]}}
    if(!numberResult[0]&&rangeResult[0])return numberResult;else if(numberResult[0]&&!rangeResult[0])return rangeResult;else if(!numberResult[0]&&!rangeResult[0])return rangeResult;else return[!0,""]}
function requiredChecker(element){return element.val().length<=0?[!1,ERROR_MESSAGE.getValueOfKey('required')]:[!0,""]}
function minMaxCheckerCharacter(element){let length=Number(element.val().length);let minLength=Number(element.jfv("min"));let maxLength=Number(element.jfv("max"));let errorMessage=new JFV.Extractor('');if(length<minLength)return[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('character.min')).setValue('minLength',minLength).getValue];else if(length>maxLength)return[!1,errorMessage.reset(ERROR_MESSAGE.getValueOfKey('character.max')).setValue('maxLength',maxLength).getValue];else return[!0,""]}
function equalChecker(element){let length=Number(element.val().length);let equalLength=Number(element.jfv("equal"))?Number(element.jfv("equal")):2;let errorMessage=new JFV.Extractor(ERROR_MESSAGE.getValueOfKey('character.max'));return length===equalLength?[!0,""]:[!1,errorMessage.setValue('equalLength',equalLength).getValue]}
function passwordConfirmationChecker(element){let password=$('#'+(element.jfv("ref")?element.jfv("ref"):'password'));if(element.val()!==password.val())return[!1,ERROR_MESSAGE.getValueOfKey('password.confirmation')];else return[!0,""]}
function setValidIndicator(element){element.removeClass(validationCLass.input[1],validationCLass.input[2]);element.addClass(validationCLass.input[0]);if(element.jfv("label")){let label=$("label[for="+element.jfv("label")+"]");if(label.length<=0)label=$('#'+element.jfv("label"));try
{label.removeClass(validationCLass.label[1],validationCLass.label[2]);label.addClass(validationCLass.label[0])}catch(e){}}}
function setInvalidIndicator(element,errorMessage,isPasswordInput,isOnSubmit=!1){if(isOnSubmit){element.removeClass(validationCLass.input[0],validationCLass.input[2]);element.addClass(validationCLass.input[1])}else{element.removeClass(validationCLass.input[0],validationCLass.input[1]);element.addClass(validationCLass.input[2])}
    if(element.jfv("label")){try
    {let label=$("label[for="+element.jfv("label")+"]");if(label.length<=0)label=$('#'+element.jfv("label"));if(isOnSubmit){label.removeClass(validationCLass.label[0],validationCLass.label[2]);label.addClass(validationCLass.label[1])}else{label.removeClass(validationCLass.label[0],validationCLass.label[1]);label.addClass(validationCLass.label[2])}}catch(e){}}
    setInvalidErrorMessage(element[0],errorMessage,isOnSubmit,isPasswordInput);element[0].scrollIntoView({block:"center",behavior:"smooth"})}
function setInvalidErrorMessage(element,errorMessage,isOnSubmit,isPasswordInput){let newNode=document.createElement("h6");newNode.classList.add("jfv-display-error-message");newNode.innerHTML=errorMessage;insertAfter(newNode,element,isPasswordInput);if(isOnSubmit){newNode.classList.remove(validationCLass.label[2]);newNode.classList.add(validationCLass.label[1])}
else{newNode.classList.remove(validationCLass.label[1]);newNode.classList.add(validationCLass.label[2])}}
function insertAfter(el,referenceNode,isPasswordInput=!1){if(isPasswordInput){insertAfter(el,referenceNode.parentNode)}
else referenceNode.parentNode.insertBefore(el,referenceNode.nextSibling)}
function removeErrorMessage(){$(".jfv-display-error-message").remove()}
function once(fn,context){let result;return function(){if(fn){result=fn.apply(context||this,arguments);fn=null}
    return result}}
const blurEventOnInput=once(function(element){element.on("blur",function(){removeErrorMessage()})});function secondTypeValidator(element){let secondType=$(element).jfv("type");if(secondType==="required")return requiredChecker(element);else if(secondType==="empty")return emptyChecker(element);else if(secondType==="range")return minMaxCheckerCharacter(element);else if(secondType==="equal")return equalChecker(element);else if(secondType==="number")return numberChecker(element);else return[!0,""]}
function inputValidator(element,isOnSubmit=!1){let object=[!0,""];let type=element.prop('type');let isPasswordInput=!1;removeErrorMessage();blurEventOnInput(element);switch(element.prop('tagName')){case 'INPUT':if(element.jfv("optional")&&element.val()==="")object=[!0,""];else if(type==='email')object=emailChecker(element);else if(type==='number')object=numberChecker(element);else if(element.jfv("type")&&element.jfv("type")==='password')
{isPasswordInput=!0;if(element.jfv("ref"))object=passwordConfirmationChecker(element);else object=minMaxCheckerCharacter(element)}
else if(type==='text')
{if(element.jfv("type"))
    object=secondTypeValidator(element)}
    break;case 'TEXTAREA':if(element.jfv("type"))
    object=secondTypeValidator(element);break;case 'SELECT':object=[!0,""];break;default:object=[!0,""];break}
    object[0]===!0?setValidIndicator(element):setInvalidIndicator(element,object[1],isPasswordInput,isOnSubmit);return object[0]}
function validator(form,isOnSubmit=!1){let isValidArray=[];if(form.length>0&&form.prop('tagName')==='FORM'){let items=form.find('input, textarea');items.each(function(index){let element=$(this);if(element.jfv('validate')!=='false'&&!element.jfv('validate')){if(element.prop('type')&&element.prop('type')!=="hidden"&&element.prop('type')!=="file"){element.on("focus",function(){inputValidator(element)});element.on("keyup",function(){inputValidator(element)});if(isOnSubmit)inputValidator(element,!0)?isValidArray.push(!0):isValidArray.push(!1)}}});return isValidArray.every(a=>a===!0)}}
function runValidator(){let isAjax=!1;$(".jfv-form").each(function(index){const form=$(this);validator(form,!1);if($(form).jfv("ajax")==="true")isAjax=!0;form.on("submit",function(event){event.preventDefault();if(validator(form,!0)){if(!isAjax)event.currentTarget.submit()}
else event.stopImmediatePropagation()})})}
runValidator()